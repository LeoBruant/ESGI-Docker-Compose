version: "3.9"

services:
    app1:
        container_name: esgi-docker-app1
        build:
            context: .
            dockerfile: docker/app1/Dockerfile
        depends_on:
            - db

    app2:
        container_name: esgi-docker-app2
        build:
            context: .
            dockerfile: docker/app2/Dockerfile
        depends_on:
            - db

    nginx1:
        container_name: esgi-docker-nginx1
        depends_on:
            - app1
        image: nginx
        ports:
            - "3000:80"
        volumes:
            - ./docker/nginx1/nginx.conf:/etc/nginx/nginx.conf
            - ./app1/public:/var/www/html/public
            - ./app1/storage/logs:/var/log/nginx

    nginx2:
        container_name: esgi-docker-nginx2
        image: nginx
        depends_on:
            - app2
        ports:
            - "8000:80"
        volumes:
            - ./docker/nginx2/nginx.conf:/etc/nginx/nginx.conf
            - ./app2/public:/var/www/html/public
            - ./app2/storage/logs:/var/log/nginx

    phpmyadmin:
        container_name: esgi-docker-compose-phpmyadmin
        depends_on:
            - db
        environment:
            PMA_HOST: db
        image: phpmyadmin/phpmyadmin
        ports:
            - "8080:80"
        restart: always

    db:
        environment:
            MYSQL_DATABASE: example_app
            MYSQL_USER: user
            MYSQL_PASSWORD: pass
            MYSQL_ROOT_PASSWORD: root
        image: mysql
        restart: always
