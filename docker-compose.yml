version: "3.9"

services:
    web1:
        container_name: esgi-docker-web1
        build:
            context: .
            dockerfile: docker/web1/Dockerfile
        depends_on:
            - db
        volumes:
            - ./resources:/var/www/html/resources

    web2:
        container_name: esgi-docker-web2
        build:
            context: .
            dockerfile: docker/web2/Dockerfile
        depends_on:
            - db
        volumes:
            - ./resources:/var/www/html/resources

    nginx1:
        container_name: esgi-docker-nginx1
        depends_on:
            - web1
        image: nginx
        ports:
            - "3000:80"
        volumes:
            - ./docker/nginx1/nginx.conf:/etc/nginx/nginx.conf
            - ./public:/var/www/html/public
            - ./storage/logs/1:/var/log/nginx
    nginx2:
        container_name: esgi-docker-nginx2
        image: nginx
        depends_on:
            - web2
        ports:
            - "8000:80"
        volumes:
            - ./docker/nginx1/nginx.conf:/etc/nginx/nginx.conf
            - ./public:/var/www/html/public
            - ./storage/logs/2:/var/log/nginx

    phpmyadmin:
        container_name: esgi-docker-compose-phpmyadmin
        depends_on:
            - db
        environment:
            PMA_HOST: db
        image: phpmyadmin/phpmyadmin
        ports:
            - "8080:80"
        restart: always

    db:
        environment:
            MYSQL_DATABASE: example_app
            MYSQL_USER: user
            MYSQL_PASSWORD: pass
            MYSQL_ROOT_PASSWORD: root
        image: mysql
        restart: always
